{
    "sourceFile": "lib/screens/categories_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1720017834308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1720074504050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+// ignore_for_file: library_private_types_in_public_api\r\n+\r\n import 'package:flutter/material.dart';\r\n import 'package:flutter_bloc/flutter_bloc.dart';\r\n import 'package:news_today/blocs/news/news_bloc.dart';\r\n import 'package:news_today/models/news_models.dart';\r\n@@ -6,8 +8,10 @@\n import 'package:news_today/utils/text.dart';\r\n import '../widgets/news_list.dart';\r\n \r\n class CategoriesScreen extends StatefulWidget {\r\n+  const CategoriesScreen({super.key});\r\n+\r\n   @override\r\n   _CategoriesScreenState createState() => _CategoriesScreenState();\r\n }\r\n \r\n@@ -86,11 +90,11 @@\n         _selectCategory(category);\r\n         _fetchCategoryNews(category);\r\n       },\r\n       style: ButtonStyle(\r\n-        backgroundColor: MaterialStateProperty.resolveWith<Color>(\r\n-          (Set<MaterialState> states) {\r\n-            if (states.contains(MaterialState.pressed) ||\r\n+        backgroundColor: WidgetStateProperty.resolveWith<Color>(\r\n+          (Set<WidgetState> states) {\r\n+            if (states.contains(WidgetState.pressed) ||\r\n                 category == _selectedCategory) {\r\n               return apptheme.terinaryColor;\r\n             }\r\n             return Colors.white;\r\n"
                },
                {
                    "date": 1720078000716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,12 +114,13 @@\n   void _fetchCategoryNews(String category) {\r\n     BlocProvider.of<NewsBloc>(context).add(FetchCategoryNews(category));\r\n   }\r\n \r\n-  List<NewsArticle> _filterNewsByCategory(\r\n-      List<NewsArticle> news, String category) {\r\n-    return news\r\n-        .where((article) =>\r\n-            article.category.toLowerCase() == category.toLowerCase())\r\n-        .toList();\r\n-  }\r\n+  List<NewsArticle> _filterNewsByCategory(List<NewsArticle> news, String category) {\r\n+  final filteredNews = news\r\n+      .where((article) => article.category.toLowerCase() == category.toLowerCase())\r\n+      .toList();\r\n+  print('Filtered news for category $category: $filteredNews');\r\n+  return filteredNews;\r\n }\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1720078370261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,14 +114,14 @@\n   void _fetchCategoryNews(String category) {\r\n     BlocProvider.of<NewsBloc>(context).add(FetchCategoryNews(category));\r\n   }\r\n \r\n-  List<NewsArticle> _filterNewsByCategory(\r\n-      List<NewsArticle> news, String category) {\r\n-    final filteredNews = news\r\n-        .where((article) =>\r\n-            article.category.toLowerCase() == category.toLowerCase())\r\n-        .toList();\r\n-    print('Filtered news for category $category: $filteredNews');\r\n-    return filteredNews;\r\n-  }\r\n+ List<NewsArticle> _filterNewsByCategory(\r\n+    List<NewsArticle> news, String category) {\r\n+  final filteredNews = news.where((article) =>\r\n+      article.category.toLowerCase().trim() ==\r\n+      category.toLowerCase().trim()).toList();\r\n+  print('Filtered news for category $category: $filteredNews');\r\n+  return filteredNews;\r\n }\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1720078389199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,13 +116,10 @@\n   }\r\n \r\n   List<NewsArticle> _filterNewsByCategory(\r\n       List<NewsArticle> news, String category) {\r\n-    final filteredNews = news\r\n+    return news\r\n         .where((article) =>\r\n-            article.category.toLowerCase().trim() ==\r\n-            category.toLowerCase().trim())\r\n+            article.category.toLowerCase() == category.toLowerCase())\r\n         .toList();\r\n-    print('Filtered news for category $category: $filteredNews');\r\n-    return filteredNews;\r\n   }\r\n }\r\n"
                }
            ],
            "date": 1720017834308,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:flutter_bloc/flutter_bloc.dart';\r\nimport 'package:news_today/blocs/news/news_bloc.dart';\r\nimport 'package:news_today/models/news_models.dart';\r\nimport 'package:news_today/utils/apptheme.dart';\r\nimport 'package:news_today/utils/text.dart';\r\nimport '../widgets/news_list.dart';\r\n\r\nclass CategoriesScreen extends StatefulWidget {\r\n  @override\r\n  _CategoriesScreenState createState() => _CategoriesScreenState();\r\n}\r\n\r\nclass _CategoriesScreenState extends State<CategoriesScreen> {\r\n  String _selectedCategory = '';\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      backgroundColor: apptheme.scaffoldColor,\r\n      appBar: AppBar(\r\n        title: ModifiedTexts(\r\n          text: 'Select a Category',\r\n          color: Colors.white,\r\n          size: 23,\r\n        ),\r\n        backgroundColor: apptheme.scaffoldColor,\r\n      ),\r\n      body: Column(\r\n        crossAxisAlignment: CrossAxisAlignment.start,\r\n        children: [\r\n          SizedBox(height: 10),\r\n          Wrap(\r\n            alignment: WrapAlignment.spaceEvenly,\r\n            children: [\r\n              _buildCategoryButton('Politics', 'politics'),\r\n              _buildCategoryButton('Sports', 'sports'),\r\n              _buildCategoryButton('Technology', 'technology'),\r\n              _buildCategoryButton('Science', 'science'),\r\n              _buildCategoryButton('Health', 'health'),\r\n              _buildCategoryButton('Environment', 'environment'),\r\n              _buildCategoryButton('Education', 'education'),\r\n              _buildCategoryButton('World News', 'world'),\r\n              _buildCategoryButton('Entertainment', 'entertainment'),\r\n            ],\r\n          ),\r\n          SizedBox(height: 20),\r\n          Expanded(\r\n            child: BlocBuilder<NewsBloc, NewsState>(\r\n              builder: (context, state) {\r\n                if (state is NewsInitial) {\r\n                  return Center(child: Text('Please select a category.'));\r\n                } else if (state is NewsLoading) {\r\n                  return Center(child: CircularProgressIndicator());\r\n                } else if (state is NewsLoaded) {\r\n                  final filteredNews =\r\n                      _filterNewsByCategory(state.news, _selectedCategory);\r\n                  if (filteredNews.isEmpty) {\r\n                    return Center(\r\n                      child: Text(\r\n                        'No articles available for this category.',\r\n                        style: TextStyle(\r\n                            color: Colors.white,\r\n                            fontSize: 16,\r\n                            fontWeight: FontWeight.bold),\r\n                      ),\r\n                    );\r\n                  }\r\n                  return NewsList(news: filteredNews);\r\n                } else if (state is NewsError) {\r\n                  return Center(child: Text(state.message));\r\n                } else {\r\n                  return Container();\r\n                }\r\n              },\r\n            ),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n\r\n  Widget _buildCategoryButton(String buttonText, String category) {\r\n    return ElevatedButton(\r\n      onPressed: () {\r\n        _selectCategory(category);\r\n        _fetchCategoryNews(category);\r\n      },\r\n      style: ButtonStyle(\r\n        backgroundColor: MaterialStateProperty.resolveWith<Color>(\r\n          (Set<MaterialState> states) {\r\n            if (states.contains(MaterialState.pressed) ||\r\n                category == _selectedCategory) {\r\n              return apptheme.terinaryColor;\r\n            }\r\n            return Colors.white;\r\n          },\r\n        ),\r\n      ),\r\n      child: Text(buttonText),\r\n    );\r\n  }\r\n\r\n  void _selectCategory(String category) {\r\n    setState(() {\r\n      _selectedCategory = category;\r\n    });\r\n  }\r\n\r\n  void _fetchCategoryNews(String category) {\r\n    BlocProvider.of<NewsBloc>(context).add(FetchCategoryNews(category));\r\n  }\r\n\r\n  List<NewsArticle> _filterNewsByCategory(\r\n      List<NewsArticle> news, String category) {\r\n    return news\r\n        .where((article) =>\r\n            article.category.toLowerCase() == category.toLowerCase())\r\n        .toList();\r\n  }\r\n}\r\n"
        }
    ]
}